@model Resources.BestiaryViewModel

@{
    ViewData["Title"] = "Bestiary";
}

<h1>Bestiary</h1>

@if (Model != null && Model.BookDropdown != null && Model.BookDropdown.Any())
{
    <form method="post" action="@Url.Action("Bestiary")">
        <select id="bookList" name="SelectedBook">
            <option value="">Select a Book</option>
            @foreach (var book in ((IEnumerable<SelectListItem>)Model.BookDropdown ?? Enumerable.Empty<SelectListItem>()).OrderBy(a => a.Text))
            {
                <option value="@book.Value">@book.Text</option>
            }
        </select>
        <button type="submit">Submit</button>
    </form>
}
else
{
    <p>No books found.</p>
}

@if (Model.SelectedBook != null)
{
    <h1>@Model.SelectedBook</h1>
    <form method="post" action="@Url.Action("SelectCreature")">
        <input type="hidden" name="SelectedBook" value="@Model.SelectedBook" />
        <input type="hidden" name="JsonFilePath" value="@Model.JsonFilePath" />
        <input type="hidden" name="SelectedCreature" value="@Model.SelectedCreature" />
        <select id="creatureList" name="SelectedCreatureName" >
            <option value="">Select a creature</option>
            @foreach (var creature in ((IEnumerable<SelectListItem>)ViewBag.Creatures ?? Enumerable.Empty<SelectListItem>()).OrderBy(a => a.Text))
            {   
                if (Model.SelectedCreature != null )
                {
                    var selectedCreature = Model.Creatures.FirstOrDefault(c => c.name == creature.Text);
                    <option value="@creature.Value"selected>@creature.Text</option>
                }
                else
                {
                    <option value="@creature.Value">@creature.Text</option>
                }
            }
        </select>
        <button type="submit">Submit</button>
    </form>
}

@if (Model.SelectedCreature != null)
{
    <div class="ability-table">
        <div class="ability-container">
            <div class="ability-header">Name</div>
            <div class="ability-content ability-name">@Model.SelectedCreature.name ?? ""</div>
        </div>
        <div class="ability-container">
            <div class="ability-header">Level</div>
            <div class="ability-content">@Model.SelectedCreature.level ?? ""</div>
        </div>
        <div class="ability-container">
            <div class="ability-header">AC</div>
            <div class="ability-content">@Html.DisplayFor(m => m.SelectedCreature.defenses.ac)</div>
        </div>
        <div class="ability-container">
            <div class="ability-header">Traits</div>
            <div class="ability-content">@Html.Raw(string.Join("<br/>", Model.SelectedCreature.traits ?? new List<string>()))</div>
        </div>
        <div class="ability-container">
            <div class="ability-header">Perception</div>
            <div class="ability-content">@Model.SelectedCreature.perception ?? ""</div>
        </div>
        <div class="ability-container">
            <div class="ability-header">Languages</div>
            <div class="ability-content">
                @if (Model.SelectedCreature.languages?.languages != null)
                {
                    @foreach (var language in Model.SelectedCreature.languages.languages)
                    {
                        @language

                        <br>
                    }
                }
                else
                {
                    <div></div>
                }
            </div>
        </div>
        <div class="ability-container">
            <div class="ability-header">Speed</div>
            <div class="ability-content">
                @if (Model.SelectedCreature.speed != null)
                {
                    @if (Model.SelectedCreature.speed.walk != 0)
                    {
                        <div>Walk: @Model.SelectedCreature.speed.walk</div>
                    }
                    @if (Model.SelectedCreature.speed.climb.HasValue)
                    {
                        <div>Climb: @Model.SelectedCreature.speed.climb</div>
                    }
                    else
                    {
                        <div></div>
                    }
                    @if (Model.SelectedCreature.speed.fly.HasValue)
                    {
                        <div>Fly: @Model.SelectedCreature.speed.fly</div>
                    }
                    else
                    {
                        <div></div>
                    }
                    @if (Model.SelectedCreature.speed.swim.HasValue)
                    {
                        <div>Swim @Model.SelectedCreature.speed.swim</div>
                    }
                    else
                    {
                        <div></div>
                    }
                }
                else
                {
                    <div></div>
                }
            </div>
        </div>
    </div>
}
@*@if (Model.SelectedCreature != null)
{
    <div class="ability-table">
        <div class="ability-container">
            <div class="ability-header">Name</div>
            <div class="ability-content ability-name">@Model.SelectedCreature.name</div>
        </div>
        <div class="ability-container">
            <div class="ability-header">Level</div>
            <div class="ability-content">@Model.SelectedCreature.level</div>
        </div>
        <div class="ability-container">
            <div class="ability-header">AC</div>
            <div class="ability-content">@Html.DisplayFor(m => m.SelectedCreature.defenses.ac)</div>
        </div>
        <div class="ability-container">
            <div class="ability-header">Traits</div>
            <div class="ability-content">@Html.Raw(string.Join("<br/>", Model.SelectedCreature.traits))</div>
        </div>
        <div class="ability-container">
            <div class="ability-header">Perception</div>
            <div class="ability-content">@Html.DisplayFor(m => m.SelectedCreature.perception)</div>
        </div>
        <div class="ability-container">
            <div class="ability-header">Languages</div>
            <div class="ability-content">
                @foreach (var language in Model.SelectedCreature.languages.languages)
                {
                    @language

                    <br>
                }
            </div>
        </div>
        <div class="ability-container">
            <div class="ability-header">Speed</div>
            <div class="ability-content">
                @if (Model.SelectedCreature.speed.walk != 0)
                {
                    <div>Walk: @Model.SelectedCreature.speed.walk</div>
                }
                @if (Model.SelectedCreature.speed.climb.HasValue)
                {
                    <div>Climb: @Model.SelectedCreature.speed.climb</div>
                }
                else
                {
                    <div></div>
                }
                @if (Model.SelectedCreature.speed.fly.HasValue)
                {
                    <div>Fly: @Model.SelectedCreature.speed.fly</div>
                }
                else
                {
                    <div></div>
                }
                @if (Model.SelectedCreature.speed.swim.HasValue)
                {
                    <div>Swim @Model.SelectedCreature.speed.swim</div>
                }
                else
                {
                    <div></div>
                }
            </div>
        </div>
    </div>
           
}*@


@section Scripts{
    <script>
        $(function () {
            $('#bookList').on('change', function () {
                $('#bookForm').submit();
            });
            $('#creatureList').on('change', function () {
                $('#creatureForm').submit();
            });
        });
        $(document).ready(function () {
            // Update the value of the hidden input field whenever a new book is selected
            $('#bookDropdown').on('change', function () {
                $('#SelectedBook').val($(this).val());
            });
        });
    </script>
}

